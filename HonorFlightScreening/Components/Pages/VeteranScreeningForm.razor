@page "/screening/new"
@page "/screening/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using HonorFlightScreening.Data
@using HonorFlightScreening.Services
@rendermode InteractiveServer
@attribute [Authorize]
@inject VeteranScreeningService ScreeningService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject IJSRuntime JsRuntime

<PageTitle>@(IsNewScreening ? "New" : "Edit") Veteran Screening</PageTitle>

<div class="container-fluid">
    @if (_screening == null && !IsNewScreening)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="row justify-content-center">
            <div class="col-12 col-lg-8">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <div class="row align-items-center">
                            <div class="col">
                                <h4 class="mb-0">
                                    <i class="fas fa-user-shield me-2"></i>
                                    Honor Flight Screening
                                </h4>
                            </div>
                            <div class="col-auto">
                                <button class="btn btn-outline-light btn-sm" @onclick="GoBack">
                                    <i class="fas fa-arrow-left me-1"></i>
                                    Back
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        <EditForm Model="_screening" OnValidSubmit="SaveScreening">
                            <DataAnnotationsValidator />
                            <ValidationSummary class="alert alert-danger" />

                            <!-- Veteran Information -->
                            <div class="screening-section">
                                <div class="section-header">
                                    <i class="fas fa-user text-primary"></i>
                                    <span>Veteran Information</span>
                                </div>
                                <div class="row">
                                    <div class="col-9">
                                        <div class="mb-3">
                                            <label for="veteranName" class="form-label">Veteran Name *</label>
                                            <InputText id="veteranName" class="form-control" @bind-Value="_screening.VeteranName" />
                                            <ValidationMessage For="() => _screening.VeteranName" />
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class=" mb-3">
                                            <label for="SoundOffNumber" class="form-label">Sound-Off Number *</label>
                                            <InputText id="SoundOffNumber" class="form-control" @bind-Value="_screening.SoundOffNumber" />
                                            <ValidationMessage For="() => _screening.SoundOffNumber" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Medical History Review -->
                            <div class="screening-section">
                                <div class="section-header">
                                    <i class="fas fa-file-medical text-primary"></i>
                                    <span>Medical History Review</span>
                                </div>
                                <div class="question-group">
                                    <label class="question-label">Is PCP signature missing?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button" 
                                                class="btn @(_screening.HasPcpSignature == true ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => _screening.HasPcpSignature = true">
                                            YES
                                        </button>
                                        <button type="button" 
                                                class="btn @(_screening.HasPcpSignature == false ? "btn-danger" : "btn-outline-secondary")"
                                                @onclick="() => _screening.HasPcpSignature = false">
                                            NO
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- Medical Assessment -->
                            <div class="screening-section">
                                <div class="section-header">
                                    <i class="fas fa-stethoscope text-primary"></i>
                                    <span>Medical Assessment</span>
                                </div>
                                
                                <div class="question-group">
                                    <label class="question-label">Do you use oxygen?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button" 
                                                class="btn @(_screening.UseOxygen == true ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => _screening.UseOxygen = true">
                                            YES
                                        </button>
                                        <button type="button"
                                                class="btn @(_screening.UseOxygen == false ? "btn-danger" : "btn-outline-secondary")"
                                                @onclick="() => _screening.UseOxygen = false">
                                            NO
                                        </button>
                                    </div>
                                    @if (_screening.UseOxygen == true)
                                    {
                                        <div class="mb-3 mt-3">
                                            <label for="oxygenUsage" class="form-label">How much oxygen do you use?</label>
                                            <InputText id="oxygenUsage" 
                                                       class="form-control" 
                                                       @bind-Value="_screening.HowMuchOxygen"
                                                       placeholder="e.g., 2 liters per minute" />
                                        </div>
                                    }
                                </div>

                                <div class="question-group">
                                    <label class="question-label">Do you use insulin?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button" 
                                                class="btn @(_screening.UseInsulin == true ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => _screening.UseInsulin = true">
                                            YES
                                        </button>
                                        <button type="button"
                                                class="btn @(_screening.UseInsulin == false ? "btn-danger" : "btn-outline-secondary")"
                                                @onclick="() => _screening.UseInsulin = false">
                                            NO
                                        </button>
                                    </div>
                                    @if (_screening.UseInsulin == true)
                                    {
                                        <div class="mb-3 mt-3">
                                            <label for="notes" class="form-label">Do you need help giving yourself insulin?</label>
                                            <div class="btn-group-toggle d-flex gap-2">
                                                <button type="button" 
                                                        class="btn @(_screening.HelpWithInsulin == true ? "btn-success" : "btn-outline-secondary")"
                                                        @onclick="() => _screening.HelpWithInsulin = true">
                                                    YES
                                                </button>
                                                <button type="button"
                                                        class="btn @(_screening.HelpWithInsulin == false ? "btn-danger" : "btn-outline-secondary")"
                                                        @onclick="() => _screening.HelpWithInsulin = false">
                                                    NO
                                                </button>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <div class="question-group">
                                    <label class="question-label">Do you use fluid pills?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button" 
                                                class="btn @(_screening.FluidPills == true ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => _screening.FluidPills = true">
                                            YES
                                        </button>
                                        <button type="button"
                                                class="btn @(_screening.FluidPills == false ? "btn-danger" : "btn-outline-secondary")"
                                                @onclick="() => _screening.FluidPills = false">
                                            NO
                                        </button>
                                    </div>
                                </div>
                                <div class="question-group">
                                    <label class="question-label">Any medical concerns for the trip?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button"
                                                class="btn @(_screening.MedicalConcerns == true ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => _screening.MedicalConcerns = true">
                                            YES
                                        </button>
                                        <button type="button"
                                                class="btn @(_screening.MedicalConcerns == false ? "btn-danger" : "btn-outline-secondary")"
                                                @onclick="() => _screening.MedicalConcerns = false">
                                            NO
                                        </button>
                                    </div>
                                    @if (_screening.MedicalConcerns == true)
                                    {
                                        <div class="mb-3 mt-3">
                                            <label for="MedicalConcernsDetails" class="form-label">What are the concerns?</label>
                                            <InputText id="MedicalConcernsDetails"
                                                       class="form-control"
                                                       @bind-Value="_screening.MedicalConcernsDetails"
                                                        />
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Mobility Evaluation -->
                            <div class="screening-section">
                                <div class="section-header">
                                    <i class="fas fa-walking text-primary"></i>
                                    <span>Mobility Evaluation</span>
                                </div>

                                <div class="question-group">
                                    <label class="question-label">Do you require assistive devices for getting around?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button" 
                                                class="btn @(_screening.RequiresAssistiveDevice == true ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => { _screening.RequiresAssistiveDevice = true; }">
                                            YES
                                        </button>
                                        <button type="button" 
                                                class="btn @(_screening.RequiresAssistiveDevice == false ? "btn-danger" : "btn-outline-secondary")"
                                                @onclick="() => { _screening.RequiresAssistiveDevice = false; _screening.AssistiveDeviceType = null; }">
                                            NO
                                        </button>
                                    </div>
                                </div>

                                @if (_screening.RequiresAssistiveDevice == true)
                                {
                                    <div class="question-group">
                                        <label class="question-label">What device:</label>
                                        <div class="device-grid">
                                            @foreach (var deviceType in Enum.GetValues<AssistiveDeviceType>().Where(d => d != AssistiveDeviceType.None))
                                            {
                                                <button type="button" 
                                                        class="btn device-btn @(_screening.AssistiveDeviceType == deviceType ? "btn-primary" : "btn-outline-primary")"
                                                        @onclick="() => _screening.AssistiveDeviceType = deviceType">
                                                    <i class="@GetDeviceIcon(deviceType) me-2"></i>
                                                    @deviceType
                                                </button>
                                            }
                                        </div>
                                    </div>
                                }

                               

                                <div class="question-group">
                                    <label class="question-label">Any concerns about walking up and down steps in a bus?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button" 
                                                class="btn @(_screening.ConcernsWalkingStairsBus == true ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => _screening.ConcernsWalkingStairsBus = true">
                                            YES
                                        </button>
                                        <button type="button"
                                                class="btn @(_screening.ConcernsWalkingStairsBus == false ? "btn-danger" : "btn-outline-secondary")"
                                                @onclick="() => _screening.ConcernsWalkingStairsBus = false">
                                            NO
                                        </button>
                                    </div>
                                </div>

                                <div class="question-group">
                                    <label class="question-label">Any concerns about flying?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button" 
                                                class="btn @(_screening.ConcernsFlying == true ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => _screening.ConcernsFlying = true">
                                            YES
                                        </button>
                                        <button type="button"
                                                class="btn @(_screening.ConcernsFlying == false ? "btn-danger" : "btn-outline-secondary")"
                                                @onclick="() => _screening.ConcernsFlying = false">
                                            NO
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- Post-Interview Review -->
                            <div class="screening-section">
                                <div class="section-header">
                                    <i class="fas fa-exclamation-triangle text-primary"></i>
                                    <span>Post-Interview Review</span>
                                </div>

                                <div class="question-group">
                                    <label class="question-label">Are there any medical alerts?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button" 
                                                class="btn @(_screening.HasMedicalAlerts == true ? "btn-warning" : "btn-outline-secondary")"
                                                @onclick="() => _screening.HasMedicalAlerts = true">
                                            YES
                                        </button>
                                        <button type="button" 
                                                class="btn @(_screening.HasMedicalAlerts == false ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => _screening.HasMedicalAlerts = false">
                                            NO
                                        </button>
                                    </div>
                                </div>

                                <div class="question-group">
                                    <label class="question-label">Are there any mobility alerts?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button" 
                                                class="btn @(_screening.HasMobilityAlerts == true ? "btn-warning" : "btn-outline-secondary")"
                                                @onclick="() => _screening.HasMobilityAlerts = true">
                                            YES
                                        </button>
                                        <button type="button" 
                                                class="btn @(_screening.HasMobilityAlerts == false ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => _screening.HasMobilityAlerts = false">
                                            NO
                                        </button>
                                    </div>
                                </div>

                                <div class="question-group">
                                    <label class="question-label">Are there any special alerts?</label>
                                    <div class="btn-group-toggle d-flex gap-2">
                                        <button type="button" 
                                                class="btn @(_screening.HasSpecialAlerts == true ? "btn-warning" : "btn-outline-secondary")"
                                                @onclick="() => _screening.HasSpecialAlerts = true">
                                            YES
                                        </button>
                                        <button type="button" 
                                                class="btn @(_screening.HasSpecialAlerts == false ? "btn-success" : "btn-outline-secondary")"
                                                @onclick="() => _screening.HasSpecialAlerts = false">
                                            NO
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- Notes Section -->
                            <div class="screening-section">
                                <div class="section-header">
                                    <i class="fas fa-sticky-note text-primary"></i>
                                    <span>Notes</span>
                                </div>
                                <div class="form-group">
                                    <label for="notes" class="form-label">Additional Notes</label>
                                    <InputTextArea id="notes" 
                                                   class="form-control" 
                                                   rows="4" 
                                                   maxlength="500"
                                                   @bind-Value="_screening.Notes" 
                                                   @oninput="OnNotesInput" />
                                    <div class="form-text">
                                        <span class="@(NotesLength > 450 ? "text-warning" : "text-muted")">
                                            @NotesLength / 500 characters
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="d-flex justify-content-between mt-4">
                                <button type="button" class="btn btn-outline-secondary" @onclick="GoBack">
                                    <i class="fas fa-times me-2"></i>
                                    Cancel
                                </button>
                                <div class="btn-group">

                                    <button type="submit" class="btn btn-success" >
                                        <i class="fas fa-check me-2"></i>
                                        Save
                                    </button>
                                </div>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public int? Id { get; set; }
    
    private VeteranScreening _screening = new();
    private string? _currentUserId;
    private int NotesLength => _screening?.Notes?.Length ?? 0;
    private bool IsNewScreening => !Id.HasValue;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _currentUserId = authState.User.Identity?.Name;

        if (Id.HasValue && !string.IsNullOrEmpty(_currentUserId))
        {
            var existingScreening = await ScreeningService.GetScreeningAsync(Id.Value);
            if (existingScreening != null)
            {
                _screening = existingScreening;
            }
            else
            {
                Navigation.NavigateTo("/screenings");
            }
        }
    }

    private async Task SaveScreening()
    {
        if (string.IsNullOrEmpty(_currentUserId))
            return;

        if (IsNewScreening)
        {
            _screening = await ScreeningService.CreateScreeningAsync(_screening);
        }
        else
        {
            await ScreeningService.UpdateScreeningAsync(_screening);
        }
        
        await JsRuntime.InvokeVoidAsync("alert", "Screening saved successfully!");
    }

   

    private void GoBack()
    {
        Navigation.NavigateTo("/screenings");
    }

    private void OnNotesInput(ChangeEventArgs e)
    {
        _screening.Notes = e.Value?.ToString() ?? string.Empty;
        StateHasChanged();
    }

    private static string GetDeviceIcon(AssistiveDeviceType deviceType)
    {
        return deviceType switch
        {
            AssistiveDeviceType.Cane => "fas fa-blind",
            AssistiveDeviceType.Walker => "fas fa-walking",
            AssistiveDeviceType.Wheelchair => "fas fa-wheelchair",
            AssistiveDeviceType.Scooter => "fas fa-motorcycle",
            _ => "fas fa-question"
        };
    }
}